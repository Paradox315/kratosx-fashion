syntax = "proto3";

package api.system.v1;

import "validate/validate.proto";

option go_package = "kratosx-fashion/api/system/v1;v1";
option java_multiple_files = true;
option java_package = "api.system.v1";

message EmptyRequest {
}

message RegisterRequest {
  string username = 1 [(validate.rules).string.pattern = "^[a-zA-Z][a-zA-Z0-9_]{4,15}$"];
  string password = 2 [(validate.rules).string.pattern = "^[a-zA-Z]\\w{5,17}$"];
  string email = 3 [(validate.rules).string = {
    ignore_empty : true,
    email : true,
  }];
  string mobile = 4 [
    (validate.rules).string = {
      pattern:   "^1(3|4|5|6|7|8|9)\\d{9}$",
      max_len: 11,
      ignore_empty: true
    }];
  string captcha = 5 [(validate.rules).string.max_len = 6];
  string captchaId = 6;
}

message RetrieveRequest {
  string username = 1 [(validate.rules).string.pattern = "^[a-zA-Z][a-zA-Z0-9_]{4,15}$"];
  string captcha = 2  [(validate.rules).string.max_len = 6];
  string captchaId = 3;
}

message LoginRequest {
  string username = 1 [(validate.rules).string.pattern = "^[a-zA-Z][a-zA-Z0-9_]{4,15}$"];
  string password = 2 [(validate.rules).string.pattern = "^[a-zA-Z]\\w{5,17}$"];
  string captcha = 3 [(validate.rules).string.max_len = 6];
  string captchaId = 4;
}
message RefreshRequest {
  string refresh_token = 1 ;
}
message UserRequest {
  uint64 id = 1;
  string username = 2 [(validate.rules).string.pattern = "^[a-zA-Z][a-zA-Z0-9_]{4,15}$"];
  string avatar = 4;
  string email = 5 [(validate.rules).string.email = true];
  string mobile = 6 [(validate.rules).string = {
    pattern:   "^1(3|4|5|6|7|8|9)\\d{9}$",
    max_len: 11,
  }];
  string nickname = 7;
  string address = 8;
  string country = 9;
  string city = 10;
  string description = 11;
  string birthday = 12;
  uint32 gender = 13;
  uint32 age = 14;
  bool status = 15 ;
  repeated uint64 roles = 16;
}

message IDRequest {
  string id = 1;
}

message IDsRequest {
  string ids = 1;
}

message PasswordRequest {
  uint64 id = 1;
  string oldPassword = 2;
  string newPassword = 3;
  string confirmPassword = 4;
}

message ListRequest {
  uint32 current = 1;
  uint32 pageSize = 2 [(validate.rules).uint32.lte = 50];
}

message ListSearchRequest {
  uint32 current = 1;
  uint32 pageSize = 2 [(validate.rules).uint32.lte = 50];
  repeated QueryOption query = 3;
}

message RoleRequest {
  uint64 id = 1;
  string name = 2;
  string description = 3;
  repeated RoleResource resources = 4;
  repeated Router routers = 5;
}

message MenuRequest {
  uint64 id = 1;
  uint64 parentId = 2;
  string path = 3;
  string name = 4;
  string component = 5;
  string description = 6;
  MenuMeta meta = 7;
  repeated MenuAction actions = 8;
}

message EmptyReply {
}

message IDReply {
  uint64 id = 1;
}

message CaptchaReply {
  string captchaId = 1;
  string picPath = 2;
}

message UserReply {
  uint64 id = 1;
  string username = 2;
  string email = 3;
  string mobile = 4;
  string avatar = 5;
  string nickname = 6;
  string gender = 7;
  string creator = 8;
  string address = 9;
  string country = 10;
  string city = 11;
  string description = 12;
  bool status = 13;
  string birthday = 14;
  uint32 age = 15;
  string createdAt = 16;
  string updatedAt = 17;
  repeated UserRole roles = 18;
}

message UserState {
  uint64 id = 1;
  string username = 2;
  string email = 3;
  string mobile = 4;
  string avatar = 5;
  string nickname = 6;
  string gender = 7;
  string creator = 8;
  string address = 9;
  string country = 10;
  string city = 11;
  string description = 12;
  bool status = 13;
  string birthday = 14;
  uint32 age = 15;
  string registerDate = 17;
  repeated uint64 roles = 18;
}

message ListUserReply {
  repeated UserReply list = 1;
  uint32 total = 2;
}

message UserLog {
  uint64 id = 1;
  string ip = 2;
  string method = 3;
  string path = 4;
  uint32 status = 5;
  string country = 6;
  string region = 7;
  string city = 8;
  Position position = 9;
  string time = 10;
  string userAgent = 11;
  string client = 12;
  string os = 13;
  string device = 14;
  string deviceType = 15;
  string Type = 16;
}

message Position{
  float lat = 1;
  float lng = 2;
}

message ListUserLogReply{
  repeated UserLog list = 1;
  uint32 total = 2;
}

message RoleReply {
  uint64 id = 1;
  string name = 2;
  string description = 3;
  string createdAt = 4;
  string updatedAt = 5;
}

message ListRoleReply {
  repeated RoleReply list = 1;
  uint32 total = 2;
}

message MenuReply{
  repeated Menu list = 1;
}

message ListMenuReply{
  repeated Menu list = 1;
  uint32 total = 2;
}

message ListRouterReply{
  repeated RouterGroup list = 1;
  uint32 total = 2;
}

message ListMenuActionReply{
  repeated string list = 1;
  uint32 total = 2;
}

message LoginReply {
  string accessToken = 1;
  string refreshToken = 2;
  int64 expiresAt = 3;
  string tokenType = 4;
}

message RefreshReply{
  string accessToken = 1;
  string refreshToken = 2;
  int64 expiresAt = 3;
  string tokenType = 4;
}

message UploadReply {
  string url = 1;
}

message RouterReply{
  repeated RouterGroup routers = 1;
  repeated Router roleRouters = 2;
}

message UserRole{
  uint64 id = 1;
  string name = 2;
}

message RoleResource{
  string resourceId = 1;
  uint32 resourceType = 2;
}

message Menu {
  uint64 id = 1;
  uint64 parentId = 2;
  string path = 3;
  string name = 4;
  string component = 5;
  string description = 6;
  MenuMeta meta = 7;
  repeated Menu children = 8;
  repeated MenuAction actions = 9;
  string createdAt = 10;
  string updatedAt = 11;
}

message MenuAction{
  string code = 1;
  string name = 2;
}

message MenuMeta{
  repeated uint64 roles = 1;
  bool requireAuth = 2;
  string icon = 3;
  string locale = 4;
  uint32 order = 5;
  bool hideInMenu = 6;
  bool noAffix = 7;
  bool ignoreCache = 8;
}

message QueryOption{
  // ["EQ", "NEQ", "GT", "GTE", "LT", "LTE", "IN", "SORT", "LIKE", "BETWEEN"]
  string opt = 1;
  // 根据opt的不同，可能是string，int，bool，或者是一个数组
  string value = 2;
  message Interval{
    string from = 1;
    string to = 2;
  } Interval interval = 3;
  string field = 4;
  bool desc = 5;
  bool time = 6;
}

message Router{
  string path = 1;
  string method = 2;
  string name = 3;
  repeated string params = 4;
}

message RouterGroup{
  string path = 1;
  string name = 2;
  string method = 3;
  repeated Router children = 4;
}